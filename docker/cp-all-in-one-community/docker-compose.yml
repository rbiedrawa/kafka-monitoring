version: '2.1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - ./config/jmx-exporter/:/opt/prometheus/
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      EXTRA_ARGS: -javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.15.0.jar=9404:/opt/prometheus/zookeeper.yml

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    volumes:
      - ./config/jmx-exporter/:/opt/prometheus/
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      EXTRA_ARGS: -javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.15.0.jar=9404:/opt/prometheus/kafka_broker.yml

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    volumes:
      - ./config/jmx-exporter/:/opt/prometheus/
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      EXTRA_ARGS: -javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.15.0.jar=9404:/opt/prometheus/confluent_schema_registry.yml

  rest-proxy:
    image: confluentinc/cp-kafka-rest:6.2.0
    hostname: rest-proxy
    container_name: rest-proxy
    depends_on:
      - kafka
      - schema-registry
    ports:
      - 8082:8082
    volumes:
      - ./config/jmx-exporter/:/opt/prometheus/
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      KAFKAREST_OPTS: -javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.15.0.jar=9404:/opt/prometheus/confluent_rest_proxy.yml

  connect:
    image: confluentinc/cp-kafka-connect:6.2.0
    hostname: connect
    container_name: connect
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "8083:8083"
    volumes:
      - ./config/jmx-exporter/:/opt/prometheus/
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      EXTRA_ARGS: -javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.15.0.jar=9404:/opt/prometheus/kafka_connect.yml

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:6.2.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka
      - connect
    ports:
      - "8088:8088"
    volumes:
      - ./config/jmx-exporter/:/opt/prometheus/
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "kafka:29092"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
      KSQL_OPTS: -javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.15.0.jar=9404:/opt/prometheus/confluent_ksql.yml

  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:6.2.0
    container_name: ksqldb-cli
    depends_on:
      - kafka
      - connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  kafka-lag-exporter:
    image: lightbend/kafka-lag-exporter:0.6.7
    container_name: kafka-lag-exporter
    hostname: kafka-lag-exporter
    restart: always
    ports:
      - 8000:8000
    volumes:
      - ./config/kafka-lag-exporter/:/opt/docker/conf/
    environment:
      - "CLUSTER_NAME=dev"
      - "BOOTSTRAP_SERVERS=kafka:29092"

  prometheus:
    image: prom/prometheus:v2.26.0
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9090" ]
      start_period: 10s
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:7.5.2
    container_name: grafana
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3000" ]
      start_period: 10s
    ports:
      - 3000:3000
    environment:
      - "GF_INSTALL_PLUGINS=grafana-piechart-panel"
      - "GF_USERS_ALLOW_SIGN_UP=false"
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=password"
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus